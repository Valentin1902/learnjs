1.(Map)
Користувач вводить слово англійською, а йому у відповідь українське.
Використовувати Map і діалогові вікна.
Якщо користувач вводить слово, котрого не існує,
йому пропонується доповнити словник, і юзер додає нове слово з перекладом в Map.
Далі програма повторно запитує слово для перекладу і так по колу.
Для завершення програми юзер має ввести команду: #exit

2.(Set)
У вас є два масиви з числами. Необхідно знайти всі числа, які є одночасно в обох масивах.
const array1 = [1, 2, 3, 4, 5, 6];
const array2 = [4, 5, 6, 7, 8, 9];

3.(Set)
Дано рядок, що може містити повторювані символи.
Необхідно перевірити, чи складається цей рядок лише з унікальних символів.
const str = "abcdefg";

4.(Function constuctor)
Створіть функцію-конструктор Car, яка створює об'єкти з наступними властивостями:
марка (brand),
модель (model),
рік випуску (year).
Додайте до об'єктів метод getCarInfo(),
який буде повертати рядок з інформацією про автомобіль у форматі:
"Марка: Toyota, Модель: Corolla, Рік випуску: 2020".

5.(Function constuctor)
Створіть функцію-конструктор User, яка приймає ім'я користувача (name) та його вік (age).
Додайте метод canVote(), який буде повертати true, якщо користувач старше 18 років,
і false – якщо молодше.

6.(Function constuctor)
Створіть функцію-конструктор BankAccount, яка створює банківський рахунок
з початковим балансом (balance). Додайте методи:
deposit(amount), який додає до балансу зазначену суму.
withdraw(amount), який знімає кошти з рахунку, якщо баланс достатній,
інакше виводить повідомлення про недостатній баланс.
getBalance(), який повертає поточний баланс.
Приклад використання:
const myAccount = new BankAccount(1000);
myAccount.deposit(500);
console.log(myAccount.getBalance()); 
// Очікуваний результат: 1500
myAccount.withdraw(2000); 
// Очікуваний результат: "Недостатньо коштів"
console.log(myAccount.getBalance());
// Очікуваний результат: 1500 (оскільки зняття не відбулося)
